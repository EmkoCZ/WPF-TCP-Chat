<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chatBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABJ9JREFUeF7t
        mU9MHHUUx8eD1Xj1YErTahGwK5YK29piV0Gp/wKlYltibYu1prUUOHiw0kQrsSgQox4a00AsBqM2Nqmm
        MQUNUBpXDyZ686qS2CXxYrRwISZ+fQ+/s5mZ3fkt7u4s62Y+ySe7789v3lvYLBPWCgkJCQkJCQkJyZKy
        brSu7sFMWQ8WRKyQC9xhJ9cqDOu6MbCuCygmb+/CG1wvWNZ3orX8OFDehcU7j+PE2m6UsVRwdHZ5J17W
        XbhTC0vBUXkMMyLEE0ytOBXH0Ks7Vb2AK0wFR+Qo5kWIq5lacXQX7nSdqeDYeARQGRYNBdur9nlAZVg0
        FGyvzYcBlWHRkPVe1XuxattzGKo/hLlth4CATYiDOpPjXXh6fWW7C1PNSOxZDMU6gAI7wPEu0vSlle0u
        TDUjjQcxJ+LhA7ifqcBo7EBMZzV0IMFU3tDrqgyXz479gMowcIKal/V1H9sHqAwDxzTPrmWS7S5MNSPN
        TwMqw8AxzbNrmWS7C1PNyK52QGVonYrj21fjgCrP40znLe+dly+yvu7uvYDK0BqZBpwynbe8d16+yPq6
        7bsBlaE1MQ44ZTpvee88J3vl/qB9D4akPmf3Jd2DhDwOag/bXdh9DJfPM22AytD68XPERdCvmc5b3jvP
        yb6nMGTX/dzflv4ewq4zXD4dTwIqw8AxzZP8nNYO7Eq9J+lok/ucf8+mvYdg7b+/jsOtgMowcEzzMu2S
        y1lfjrYAKkPrNfn0FkGTn96evJ9+/cm8d54TU03J5awvnc2AytAalk9sp0yn5P1ku+91vPOcmGpKLmd9
        6XkCUBlaX0wATplOyfvJdt/reOc5MdWUXM768uLjgMrQ+uES4iJo8tPbk/fTrz+Z985zYtcyyXYXppqR
        lx4FVIaBY5pn1zLJdhemmpHeHYDKMHBM8zLtkstZX15pAlSGvpx6BE3SN2v3p3FWe9jui93P0IWppuRy
        1pe+h5AQ0deIGFNpkZ7ZpT6zv7A9La834QH2XWPKhX0dhimY6pnO+tL/IAb6G4BCeroBb3K8C7vOMAVT
        PdNZX/qqsWpQfghiQkTAXhuQF68zOd6F3ccwBVM909m88VYMUBkWDQXb693tgMqwaCjYXmfqAZVh0VCw
        vc5uxbyIM9tX7mtxL2frsUZ3Ev9kKjhG7sMVEcNb0MvUijOyFSd1J3GaqeAYrUPL6GZAXDwXRe+52pV7
        J4zJb350C07qLrrT+1E0sxQsH9ahX0Q2jtUhMRbF4AWfP4Ve5AWulXMXxevO66QYxWkeKQwfyTvhk1pM
        i/MisjDt//acfFyHqPTNec451dnT5+8t0G8+H1zYhJgI0fj94Kc12Ck9C0u9NZiUxzUs/f+5WAOoDFP4
        bCOOSP2vpb5N+GA4ihtZKg0u3QOoDJPAwg2S72P9b32uOZZLh8t3AyrDJcYrcNN4Nc6ztng5goMslR5f
        RQCVoTW1Abd+GUGc+d8nNqCRpdJk6i78IWKyCrHpCOrk+U8aiz9PViLCttLlahXeu1oJePxuaj1uY0tp
        M3MHbv6mAu/EK/CrPP4mj29/X4ZbWA4JCQkJCQkJCQkOy/oHAnQ7DGod1RwAAAAASUVORK5CYII=
</value>
  </data>
</root>